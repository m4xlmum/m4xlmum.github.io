<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>渗透测试</title>
      <link href="2021/05/28/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
      <url>2021/05/28/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h1><h2 id="冰蝎Shell管理工具"><a href="#冰蝎Shell管理工具" class="headerlink" title="冰蝎Shell管理工具"></a>冰蝎Shell管理工具</h2><h3 id="引用内容，与冰蝎的基本使用和原理"><a href="#引用内容，与冰蝎的基本使用和原理" class="headerlink" title="引用内容，与冰蝎的基本使用和原理"></a>引用内容，与冰蝎的基本使用和原理</h3><p><a href="https://www.anquanke.com/post/id/212271">冰蝎，从入门到魔改</a></p><p><a href="https://github.com/rebeyond/Behinder">官方给出的ReadMe文档</a></p><h3 id="使用方式，与冰蝎的优势和特征"><a href="#使用方式，与冰蝎的优势和特征" class="headerlink" title="使用方式，与冰蝎的优势和特征"></a>使用方式，与冰蝎的优势和特征</h3><p>因为从前的”菜刀”的流量很容易被各种工具检测到，才有了这个第二代的Shell管理工具，冰蝎是基于流量加密的Shell管理软件。冰蝎是基于Java的，所以可以跨平台使用。</p><p><strong>主要功能为：基本信息、命令执行、虚拟终端、文件管理、Socks代理、反弹shell、数据库管理、自定义代码等</strong></p><p><a href="https://github.com/rebeyond/Behinder/releases">下载GitHub上冰蝎的Release版本</a></p><p>不过需要Jre的版本为1.6-1.8似乎是，我直接运行不了，就主要使用蚁剑来进行Shell管理了。</p><h2 id="蚁剑Shell管理工具"><a href="#蚁剑Shell管理工具" class="headerlink" title="蚁剑Shell管理工具"></a>蚁剑Shell管理工具</h2><p><a href="https://xz.aliyun.com/t/4000">从静态到动态打造一款免杀的antSword(蚁剑)</a></p><p>蚁剑主要使用的是编解码流量内容来进行绕过WAF，只能说与冰蝎各有千秋吧感觉，不好说谁好谁坏。</p><h2 id="哥斯拉Shell管理工具"><a href="#哥斯拉Shell管理工具" class="headerlink" title="哥斯拉Shell管理工具"></a>哥斯拉Shell管理工具</h2><p><a href="https://github.com/BeichenDream/Godzilla/releases/tag/v3.03-godzilla">工具的下载地址</a></p><p>这个听说和冰蝎差不多，emmm，还没用过，用过之后再回来评价。</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 渗透测试 </tag>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF</title>
      <link href="2021/05/28/CTF/"/>
      <url>2021/05/28/CTF/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​    本片文章主要写的内容——CTF领域内我所学到的所有方向的笔记。    </p><p>​    之前的博客环境与内容坏了，内容还在，不过md的内容已经永久遗失了，之后会将所有的关于CTF内容记录到此文件内，笔记的内容尽量不超过20万字，防止读者打开的速度过慢。</p><p>​    之后会将从前写的文章放到百度网盘内备份，并且随着我放到我的VPS内，如果我没vps了就访问如下的GitHub的地址，不过这里面的url确实挺长的，如果你对我从前文章的内容感兴趣的话，请访问<a href="https://github.com/m4xlmum/a16n.github.io/">我从前的博客</a>，但是其实以前的内容也没啥，直接dump下来看好了。往后一定认真写博客，主要的是一定要备份，以前写的好多文章都没了，还是挺心疼的(还好备份还在)</p><p>​    MISC——杂项，考察内容覆盖广泛，主要包含隐写术、古典密码学、压缩包、图片、编码、取证等方面。</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="内存取证"><a href="#内存取证" class="headerlink" title="内存取证"></a>内存取证</h2><h2 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a>社会工程学</h2><h3 id="地图分析——BugKu社工-进阶收集"><a href="#地图分析——BugKu社工-进阶收集" class="headerlink" title="地图分析——BugKu社工-进阶收集"></a>地图分析——BugKu社工-进阶收集</h3><p>提　　示: flag{小美小区名字拼音}</p><p>描　　述: 小明当年为了追求小美想尽办法获得小美的地址。直到有一天小美发了一条说说，小明觉得希望来了。 (实战改编题，难度降低了。)</p><p>给出的附件内容如下所示</p><p><img src="/2021/05/28/CTF/qq.png" alt="附件"></p><p>首先看到那个塔是大雁塔，根据发帖的内容确定</p><ol><li>从发帖人家(附近的<strong>始发站</strong>)出发到大雁塔要做7站地铁。</li><li>该始发站距发帖人家的小区有800米</li><li>下一站距发帖人家1000多米。</li></ol><p>找到大雁塔附近的地铁路线图如下：</p><p><img src="/2021/05/28/CTF/20210219162217227.png" alt="西安地铁路线图"></p><p><img src="/2021/05/28/CTF/image-20210528200737880.png" alt="确定始发站为韦曲南站"></p><p>根据地铁线路图可以发现只有韦曲南站距离大雁塔的站点数为7并且中间又转乘(在小寨)了一站，故现在的条件为，发帖人家的小区距离韦曲南站有800米、距航天城1000多米。打开百度地图</p><p><img src="/2021/05/28/CTF/image-20210528201622601.png" alt="image-20210528201622601"></p><p>到目前为止，差不多一眼就能看出来了，很明显发帖人所在的小区就是兰乔国际城</p><p><img src="/2021/05/28/CTF/image-20210528201736743.png" alt="对距离的大概估算"></p><p><code>flag&#123;lanqiaoguojicheng&#125;</code></p><h2 id="python脚本"><a href="#python脚本" class="headerlink" title="python脚本"></a>python脚本</h2><h3 id="根据1、0生成二维码、二维码定位角补充——BugKu1和0的故事"><a href="#根据1、0生成二维码、二维码定位角补充——BugKu1和0的故事" class="headerlink" title="根据1、0生成二维码、二维码定位角补充——BugKu1和0的故事"></a>根据1、0生成二维码、二维码定位角补充——BugKu1和0的故事</h3><p>附件内容为</p><pre class="line-numbers language-data" data-language="data"><code class="language-dataspan aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>猜测可能是个二维码的形状，打开python写一手转换代码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"1和0的故事.txt"</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        res<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\\r'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> res<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>            plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 这个我后来又改了一下，这个我感觉是复原二维码来说最好用的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/05/28/CTF/image-20210529000305513.png" alt="得到下面的图像"></p><p>然后用ps添加一下二维码的三个角获得完整的二维码。</p><p>定位角如下</p><p><img src="/2021/05/28/CTF/image-20210528235634252.png" alt="定位角"></p><p>把定位角粘到二维码的三个角的地方就行了，或者使用windows 的画图程序也挺好使的其实，但是如果是拼图的话，画图可能就不是那么好使了。</p><p><img src="/2021/05/28/CTF/image-202105290003055132.png" alt="image-202105290003055132"></p><p>用手机qq勉强也是能扫出来flag的，就是我画的不太好看，用在线的网站都不行。。。<code>flag&#123;QR_c0de_1s_1nterest1n9&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
            <tag> web </tag>
            
            <tag> crypto </tag>
            
            <tag> reverse </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
